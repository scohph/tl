/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Vesting, VestingInterface } from "../../contracts/Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "AddressCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NotExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nodeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "calculateClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nodeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nodeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "getClaimedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nodeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "getUndrawedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f89380380610f8983398101604081905261002f9161012b565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610067816100a9565b5060018055600261007885826102aa565b5050600391909155600580546001600160a01b0319166001600160a01b039092169190911790555042600455610368565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461012657600080fd5b919050565b6000806000806080858703121561014157600080fd5b84516001600160401b0381111561015757600080fd5b8501601f8101871361016857600080fd5b80516001600160401b03811115610181576101816100f9565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101af576101af6100f9565b6040528181528282016020018910156101c757600080fd5b60005b828110156101e6576020818501810151838301820152016101ca565b506000602092820183015290870151909550935061020890506040860161010f565b91506102166060860161010f565b905092959194509250565b600181811c9082168061023557607f821691505b60208210810361025557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102a557806000526020600020601f840160051c810160208510156102825750805b601f840160051c820191505b818110156102a2576000815560010161028e565b50505b505050565b81516001600160401b038111156102c3576102c36100f9565b6102d7816102d18454610221565b8461025b565b6020601f82116001811461030b57600083156102f35750848201515b600019600385901b1c1916600184901b1784556102a2565b600084815260208120601f198516915b8281101561033b578785015182556020948501946001909201910161031b565b50848210156103595786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610c12806103776000396000f3fe6080604052600436106100955760003560e01c8063b69d1a0811610059578063b69d1a0814610160578063b8ca8dd814610180578063d3e4a06d146101a0578063f28b5cc6146101c0578063f2fde38b146101e057600080fd5b8063258898b3146100a157806358577d78146100c3578063715018a6146100f65780638da5cb5b1461010b578063afa718ac1461013357600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610938565b610200565b005b3480156100cf57600080fd5b506100e36100de3660046109c0565b610340565b6040519081526020015b60405180910390f35b34801561010257600080fd5b506100c16103a7565b34801561011757600080fd5b506000546040516001600160a01b0390911681526020016100ed565b34801561013f57600080fd5b506100e361014e366004610a28565b60066020526000908152604090205481565b34801561016c57600080fd5b506100c161017b366004610a41565b6103bb565b34801561018c57600080fd5b506100c161019b366004610a94565b610541565b3480156101ac57600080fd5b506100e36101bb3660046109c0565b61061b565b3480156101cc57600080fd5b506100e36101db3660046109c0565b6106ab565b3480156101ec57600080fd5b506100c16101fb366004610ac0565b610791565b6102086107cf565b6001600160a01b03821661023f5760405163084c41ef60e01b81526001600160a01b03831660048201526024015b60405180910390fd5b6040516370a0823160e01b81523060048201526001600160a01b038216906370a0823190602401602060405180830381865afa158015610283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a79190610ae2565b8311156102c757604051631e9acf1760e31b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af1158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a9190610afb565b50505050565b60008086858760405160200161035893929190610b1d565b60405160208183030381529060405280519060200120905061037e8484600354846107fc565b61038c57600091505061039e565b60009081526006602052604090205490505b95945050505050565b6103af6107cf565b6103b960006108a2565b565b6103c36108f2565b60008433856040516020016103da93929190610b1d565b6040516020818303038152906040528051906020012090506104008383600354846107fc565b61043d5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210383937b7b31760911b6044820152606401610236565b600061044c86863387876106ab565b90508060000361046f5760405163d0404f8560e01b815260040160405180910390fd5b60008281526006602052604090819020805483019055600554905163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f99190610afb565b5060408051828152426020820152339130917f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44910160405180910390a3505061033a60018055565b6105496107cf565b6001600160a01b03811661057b5760405163084c41ef60e01b81526001600160a01b0382166004820152602401610236565b4782111561059c57604051631e9acf1760e31b815260040160405180910390fd5b604080516000808252602082019092526001600160a01b0383169084906040516105c69190610b45565b60006040518083038185875af1925050503d8060008114610603576040519150601f19603f3d011682016040523d82523d6000602084013e610608565b606091505b505090508061061657600080fd5b505050565b60008086858760405160200161063393929190610b1d565b6040516020818303038152906040528051906020012090506106598484600354846107fc565b61066757600091505061039e565b60008181526006602052604090205486900361068757600091505061039e565b6000818152600660205260409020546106a09087610b8a565b979650505050505050565b6000808685876040516020016106c393929190610b1d565b6040516020818303038152906040528051906020012090506106e98484600354846107fc565b6106f757600091505061039e565b60008181526006602052604090205486900361071757600091505061039e565b4260006107286301e1338089610ba3565b905060006301e1338060045461073e9190610bc5565b9050600081841161075b576004546107569085610b8a565b610761565b6301e133805b9050600061076f8483610bd8565b600096875260066020526040909620549095039b9a5050505050505050505050565b6107996107cf565b6001600160a01b0381166107c357604051631e4fbdf760e01b815260006004820152602401610236565b6107cc816108a2565b50565b6000546001600160a01b031633146103b95760405163118cdaa760e01b8152336004820152602401610236565b60008184825b8181101561089557600088888381811061081e5761081e610bef565b90506020020135905080841161085f57604080516020810186905290810182905260600160405160208183030381529060405280519060200120935061088c565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093505b50600101610802565b5050909214949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60026001540361091557604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b80356001600160a01b038116811461093357600080fd5b919050565b60008060006060848603121561094d57600080fd5b8335925061095d6020850161091c565b915061096b6040850161091c565b90509250925092565b60008083601f84011261098657600080fd5b50813567ffffffffffffffff81111561099e57600080fd5b6020830191508360208260051b85010111156109b957600080fd5b9250929050565b6000806000806000608086880312156109d857600080fd5b85359450602086013593506109ef6040870161091c565b9250606086013567ffffffffffffffff811115610a0b57600080fd5b610a1788828901610974565b969995985093965092949392505050565b600060208284031215610a3a57600080fd5b5035919050565b60008060008060608587031215610a5757600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610a7c57600080fd5b610a8887828801610974565b95989497509550505050565b60008060408385031215610aa757600080fd5b82359150610ab76020840161091c565b90509250929050565b600060208284031215610ad257600080fd5b610adb8261091c565b9392505050565b600060208284031215610af457600080fd5b5051919050565b600060208284031215610b0d57600080fd5b81518015158114610adb57600080fd5b92835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b6000825160005b81811015610b665760208186018101518583015201610b4c565b506000920191825250919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b9d57610b9d610b74565b92915050565b600082610bc057634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610b9d57610b9d610b74565b8082028115828204841417610b9d57610b9d610b74565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300081b000a";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _merkleRoot: PromiseOrValue<BytesLike>,
    _tokenAddress: PromiseOrValue<string>,
    _initialOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vesting> {
    return super.deploy(
      _name,
      _merkleRoot,
      _tokenAddress,
      _initialOwner,
      overrides || {}
    ) as Promise<Vesting>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _merkleRoot: PromiseOrValue<BytesLike>,
    _tokenAddress: PromiseOrValue<string>,
    _initialOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _merkleRoot,
      _tokenAddress,
      _initialOwner,
      overrides || {}
    );
  }
  override attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  override connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
