/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TRLOOP, TRLOOPInterface } from "../../contracts/TRLOOP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "dec_",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b5060405161184a38038061184a83398101604081905261003091610403565b8060405180604001604052806006815260200165054524c4f4f560d41b81525080604051806040016040528060018152602001603160f81b81525060405180604001604052806006815260200165054524c4f4f560d41b81525060405180604001604052806006815260200165054524c4f4f560d41b81525081600390816100b891906104d2565b5060046100c582826104d2565b506100d5915083905060056101dc565b610120526100e48160066101dc565b61014052815160208084019190912060e052815190820120610100524660a05261017160e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506001600160a01b0381166101aa57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101b38161020f565b506101d6816101c46012600a61068d565b6101d1906298968061069c565b610261565b50610738565b60006020835110156101f8576101f18361029b565b9050610209565b8161020384826104d2565b5060ff90505b92915050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661028b5760405163ec442f0560e01b8152600060048201526024016101a1565b610297600083836102d9565b5050565b600080829050601f815111156102c6578260405163305a27a960e01b81526004016101a191906106b3565b80516102d182610701565b179392505050565b6001600160a01b0383166103045780600260008282546102f99190610725565b909155506103769050565b6001600160a01b038316600090815260208190526040902054818110156103575760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016101a1565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610392576002805482900390556103b1565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103f691815260200190565b60405180910390a3505050565b60006020828403121561041557600080fd5b81516001600160a01b038116811461042c57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061045d57607f821691505b60208210810361047d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104cd57806000526020600020601f840160051c810160208510156104aa5750805b601f840160051c820191505b818110156104ca57600081556001016104b6565b50505b505050565b81516001600160401b038111156104eb576104eb610433565b6104ff816104f98454610449565b84610483565b6020601f821160018114610533576000831561051b5750848201515b600019600385901b1c1916600184901b1784556104ca565b600084815260208120601f198516915b828110156105635787850151825560209485019460019092019101610543565b50848210156105815786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156105e1578085048111156105c5576105c5610590565b60018416156105d357908102905b60019390931c9280026105aa565b935093915050565b6000826105f857506001610209565b8161060557506000610209565b816001811461061b576002811461062557610641565b6001915050610209565b60ff84111561063657610636610590565b50506001821b610209565b5060208310610133831016604e8410600b8410161715610664575081810a610209565b61067160001984846105a6565b806000190482111561068557610685610590565b029392505050565b600061042c60ff8416836105e9565b808202811582820484141761020957610209610590565b602081526000825180602084015260005b818110156106e157602081860181015160408684010152016106c4565b506000604082850101526040601f19601f83011684010191505092915050565b8051602080830151919081101561047d5760001960209190910360031b1b16919050565b8082018082111561020957610209610590565b60805160a05160c05160e0516101005161012051610140516110b861079260003960006108cb0152600061089e0152600061079101526000610769015260006106c4015260006106ee0152600061071801526110b86000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806379cc6790116100a257806395d89b411161007157806395d89b411461023a578063a9059cbb14610242578063d505accf14610255578063dd62ed3e14610268578063f2fde38b146102a157600080fd5b806379cc6790146101de5780637ecebe00146101f157806384b0196e146102045780638da5cb5b1461021f57600080fd5b8063313ce567116100e9578063313ce567146101815780633644e5151461019057806342966c681461019857806370a08231146101ad578063715018a6146101d657600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102b4565b6040516101309190610e2b565b60405180910390f35b61014c610147366004610e61565b610346565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610e8b565b610360565b60405160128152602001610130565b610160610384565b6101ab6101a6366004610ec8565b610393565b005b6101606101bb366004610ee1565b6001600160a01b031660009081526020819052604090205490565b6101ab6103a0565b6101ab6101ec366004610e61565b6103b4565b6101606101ff366004610ee1565b6103cd565b61020c6103eb565b6040516101309796959493929190610efc565b6008546040516001600160a01b039091168152602001610130565b610123610431565b61014c610250366004610e61565b610440565b6101ab610263366004610f94565b61044e565b610160610276366004611007565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101ab6102af366004610ee1565b61058d565b6060600380546102c39061103a565b80601f01602080910402602001604051908101604052809291908181526020018280546102ef9061103a565b801561033c5780601f106103115761010080835404028352916020019161033c565b820191906000526020600020905b81548152906001019060200180831161031f57829003601f168201915b5050505050905090565b6000336103548185856105c8565b60019150505b92915050565b60003361036e8582856105da565b610379858585610658565b506001949350505050565b600061038e6106b7565b905090565b61039d33826107e2565b50565b6103a8610818565b6103b26000610845565b565b6103bf8233836105da565b6103c982826107e2565b5050565b6001600160a01b03811660009081526007602052604081205461035a565b6000606080600080600060606103ff610897565b6104076108c4565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102c39061103a565b600033610354818585610658565b834211156104775760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104c48c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061051f826108f1565b9050600061052f8287878761091e565b9050896001600160a01b0316816001600160a01b031614610576576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161046e565b6105818a8a8a6105c8565b50505050505050505050565b610595610818565b6001600160a01b0381166105bf57604051631e4fbdf760e01b81526000600482015260240161046e565b61039d81610845565b6105d5838383600161094c565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610652578181101561064357604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161046e565b6106528484848403600061094c565b50505050565b6001600160a01b03831661068257604051634b637e8f60e11b81526000600482015260240161046e565b6001600160a01b0382166106ac5760405163ec442f0560e01b81526000600482015260240161046e565b6105d5838383610a21565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561071057507f000000000000000000000000000000000000000000000000000000000000000046145b1561073a57507f000000000000000000000000000000000000000000000000000000000000000090565b61038e604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821661080c57604051634b637e8f60e11b81526000600482015260240161046e565b6103c982600083610a21565b6008546001600160a01b031633146103b25760405163118cdaa760e01b815233600482015260240161046e565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606061038e7f00000000000000000000000000000000000000000000000000000000000000006005610b4b565b606061038e7f00000000000000000000000000000000000000000000000000000000000000006006610b4b565b600061035a6108fe6106b7565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061093088888888610bf6565b9250925092506109408282610cc5565b50909695505050505050565b6001600160a01b0384166109765760405163e602df0560e01b81526000600482015260240161046e565b6001600160a01b0383166109a057604051634a1406b160e11b81526000600482015260240161046e565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561065257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a1391815260200190565b60405180910390a350505050565b6001600160a01b038316610a4c578060026000828254610a419190611074565b90915550610abe9050565b6001600160a01b03831660009081526020819052604090205481811015610a9f5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161046e565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ada57600280548290039055610af9565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b3e91815260200190565b60405180910390a3505050565b606060ff8314610b6557610b5e83610d7e565b905061035a565b818054610b719061103a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9d9061103a565b8015610bea5780601f10610bbf57610100808354040283529160200191610bea565b820191906000526020600020905b815481529060010190602001808311610bcd57829003601f168201915b5050505050905061035a565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610c315750600091506003905082610cbb565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610c85573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cb157506000925060019150829050610cbb565b9250600091508190505b9450945094915050565b6000826003811115610cd957610cd9611095565b03610ce2575050565b6001826003811115610cf657610cf6611095565b03610d145760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610d2857610d28611095565b03610d495760405163fce698f760e01b81526004810182905260240161046e565b6003826003811115610d5d57610d5d611095565b036103c9576040516335e2f38360e21b81526004810182905260240161046e565b60606000610d8b83610dbd565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561035a57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610e0b57602081850181015186830182015201610def565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e3e6020830184610de5565b9392505050565b80356001600160a01b0381168114610e5c57600080fd5b919050565b60008060408385031215610e7457600080fd5b610e7d83610e45565b946020939093013593505050565b600080600060608486031215610ea057600080fd5b610ea984610e45565b9250610eb760208501610e45565b929592945050506040919091013590565b600060208284031215610eda57600080fd5b5035919050565b600060208284031215610ef357600080fd5b610e3e82610e45565b60ff60f81b8816815260e060208201526000610f1b60e0830189610de5565b8281036040840152610f2d8189610de5565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015610f83578351835260209384019390920191600101610f65565b50909b9a5050505050505050505050565b600080600080600080600060e0888a031215610faf57600080fd5b610fb888610e45565b9650610fc660208901610e45565b95506040880135945060608801359350608088013560ff81168114610fea57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561101a57600080fd5b61102383610e45565b915061103160208401610e45565b90509250929050565b600181811c9082168061104e57607f821691505b60208210810361106e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561035a57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea164736f6c634300081b000a";

type TRLOOPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TRLOOPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TRLOOP__factory extends ContractFactory {
  constructor(...args: TRLOOPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initialOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TRLOOP> {
    return super.deploy(_initialOwner, overrides || {}) as Promise<TRLOOP>;
  }
  override getDeployTransaction(
    _initialOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_initialOwner, overrides || {});
  }
  override attach(address: string): TRLOOP {
    return super.attach(address) as TRLOOP;
  }
  override connect(signer: Signer): TRLOOP__factory {
    return super.connect(signer) as TRLOOP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TRLOOPInterface {
    return new utils.Interface(_abi) as TRLOOPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TRLOOP {
    return new Contract(address, _abi, signerOrProvider) as TRLOOP;
  }
}
